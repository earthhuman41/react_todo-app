{"version":3,"sources":["redux/todos.js","redux/store.js","localStorageHelper.js","propTypes/propTypes.js","components/TodoItem.js","components/Todos.js","components/Header.js","components/Footer.js","components/App.js","index.js"],"names":["todosReducer","state","arguments","length","undefined","action","type","newTodo","id","v4","title","completed","concat","Object","toConsumableArray","todos","readOnlyError","filter","todo","map","objectSpread","completedCount","countCompletedTodos","initState","JSON","parse","localStorage","getItem","store","createStore","subscribe","stateToSave","getState","setItem","stringify","getTodos","getFilteredTodos","createSelector","filterTodos","getCompletedLength","PropTypes","array","isRequired","objectOf","shape","params","string","func","object","number","boolean","TodoItem","isEditableItem","inputValue","handleDbClick","_this","setState","prevState","props","handleInput","event","value","target","handlePressEnter","key","handleSubmit","handleBlur","_this$props","objectWithoutProperties","trim","changeTodoTitle","this","TitleField","focus","_this2","_this$props2","_this$props2$todo","classes","classNames","editing","react_default","a","createElement","className","onClick","togleCompleteTodo","checked","onDoubleClick","deleteTodo","onChange","onKeyPress","onBlur","ref","input","React","Component","mapActions","connect","togleAllComplete","ownProps","completedLength","todosLength","_ref","htmlFor","components_TodoItem","Header","e","addTodo","onKeyDown","placeholder","deleteAllCompleted","clearBtnClasses","clear-completed","clear-completed--disable","react_router_dom","exact","to","activeClassName","_ref2","match","components_Header","Fragment","components_Todos","components_Footer","ReactDOM","render","es","basename","react_router","path","component","App","document","getElementById"],"mappings":"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","file":"static/js/main.011f7d81.chunk.js","sourcesContent":["import { v4 } from 'node-uuid';\n\nconst ADD_TODO = 'ADD_TODO';\nconst DELETE_TODO = 'DELETE_TODO';\nconst CHANGE_TODO_TITLE = 'CHANGE_TODO_TITLE';\nconst TOGLE_COMPLETE_TODO = 'COMPLETE_TODO';\nconst TOGLE_ALL_COMPLETE = 'TOGLE_TODOS';\nconst DELETE_ALL_COMPLETED = 'DELETE_ALL_COMPLETED';\n\nexport const addTodo = title => ({\n  type: ADD_TODO,\n  title,\n});\n\nexport const deleteTodo = id => ({\n  type: DELETE_TODO,\n  id,\n});\n\nexport const togleCompleteTodo = id => ({\n  type: TOGLE_COMPLETE_TODO,\n  id,\n});\n\nexport const togleAllComplete = () => ({\n  type: TOGLE_ALL_COMPLETE,\n});\n\nexport const deleteAllCompleted = () => ({\n  type: DELETE_ALL_COMPLETED,\n});\n\nexport const changeTodoTitle = (id, title) => ({\n  type: CHANGE_TODO_TITLE,\n  id,\n  title,\n});\n\nconst todosReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_TODO: {\n      const newTodo = {\n        id: v4(),\n        title: action.title,\n        completed: false,\n      };\n\n      return [...state, newTodo];\n    }\n\n    case DELETE_TODO: {\n      const todos = [...state];\n\n      todos = todos.filter(todo => todo.id !== action.id);\n\n      return todos;\n    }\n\n    case TOGLE_COMPLETE_TODO: {\n      let todos = [...state];\n\n      todos = todos.map((todo) => {\n        if (todo.id === action.id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n        return todo;\n      });\n\n      return todos;\n    }\n\n    case TOGLE_ALL_COMPLETE: {\n      let todos = [...state];\n      const completedCount = countCompletedTodos(todos);\n\n      todos = todos.map(todo => ({\n        ...todo,\n        completed: completedCount !== todos.length,\n      }));\n\n      return todos;\n    }\n\n    case DELETE_ALL_COMPLETED: {\n      let todos = [...state];\n\n      todos = todos.filter(todo => !todo.completed);\n\n      return todos;\n    }\n\n    case CHANGE_TODO_TITLE: {\n      let todos = [...state];\n      const { id, title } = action;\n\n      todos = todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            title,\n          };\n        }\n\n        return todo;\n      });\n\n      return todos;\n    }\n\n    default: return state;\n  }\n};\n\nexport default todosReducer;\n\n// Cелекторы\nexport const countCompletedTodos = (state = []) => {\n  const completedTodos = state.filter(todo => todo.completed);\n  return completedTodos.length;\n};\n\nexport const filterTodos = (state, filter) => {\n  return state.filter((todo) => {\n    switch (filter) {\n      case 'active':\n        return !todo.completed;\n\n      case 'completed':\n        return todo.completed;\n\n      default: return todo;\n    }\n  });\n};\n","import { createStore } from 'redux';\nimport { createSelector } from 'reselect';\nimport todosReducer, { countCompletedTodos, filterTodos } from './todos';\nimport { saveState, loadState } from '../localStorageHelper';\n\n// Загрузка из LocaleStorage\nconst initState = loadState();\n\nconst reducer = (state = initState || {}, action) => ({\n  todos: todosReducer(state.todos, action),\n});\n\nconst store = createStore(reducer);\n\n// Сохранение в LocaleStorage\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport default store;\n\n// Селекторы\nexport const getTodos = state => state.todos;\nexport const getFilter = state => state.filter;\n\nexport const getFilteredTodos = createSelector(\n  [getTodos, getFilter],\n  (todos, filter) => filterTodos(todos, filter)\n);\n\nexport const getCompletedLength = createSelector(\n  [getTodos],\n  todos => countCompletedTodos(todos)\n);\n","export const saveState = (stateToSave) => {\n  localStorage.setItem('state', JSON.stringify(stateToSave));\n};\n\nexport const loadState = () => {\n  return JSON.parse(localStorage.getItem('state'));\n};\n","import PropTypes from 'prop-types';\n\nexport const appPropTypes = {\n  todos: PropTypes.array.isRequired,\n  match: PropTypes.objectOf(PropTypes.shape({\n    params: PropTypes.objectOf(PropTypes.shape({\n      filter: PropTypes.string,\n    })),\n  })).isRequired,\n};\n\nexport const headerPropTypes = {\n  addTodo: PropTypes.func,\n};\n\nexport const todoListProps = {\n  todos: PropTypes.object.isRequired,\n  completedLength: PropTypes.number.isRequired,\n  todosLength: PropTypes.number.isRequired,\n  togleAllComplete: PropTypes.func.isRequired,\n};\n\nexport const todoItemPropTypes = {\n  todo: PropTypes.objectOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    completed: PropTypes.boolean,\n  })).isRequired,\n  togleCompleteTodo: PropTypes.func,\n  deleteTodo: PropTypes.func,\n  changeTodoTitle: PropTypes.func,\n};\n\nexport const footerPropTypes = {\n  todosLength: PropTypes.number,\n  completedLength: PropTypes.number,\n  deleteAllCompleted: PropTypes.func,\n\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { connect } from 'react-redux';\n\nimport {\n  deleteTodo, togleCompleteTodo, changeTodoTitle,\n} from '../redux/todos';\nimport { todoItemPropTypes } from '../propTypes/propTypes';\n\nclass TodoItem extends React.Component {\n  state = {\n    isEditableItem: false,\n    inputValue: '',\n  };\n\n  componentDidUpdate() {\n    this.TitleField.focus();\n  }\n\n  handleDbClick = () => {\n    this.setState(prevState => ({\n      inputValue: this.props.todo.title,\n      isEditableItem: !prevState.isEditableItem,\n    }));\n  };\n\n  handleInput = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      inputValue: value,\n    });\n  };\n\n  handlePressEnter = (event) => {\n    if (event.key === 'Enter') {\n      this.handleSubmit();\n    }\n  };\n\n  handleBlur = () => {\n    if (this.state.isEditableItem !== false) {\n      this.handleSubmit();\n    }\n  };\n\n  handleSubmit = () => {\n    const { todo: { id }, ...props } = this.props;\n    const inputValue = this.state.inputValue.trim();\n\n    if (inputValue) {\n      props.changeTodoTitle(id, inputValue);\n\n      this.setState({\n        isEditableItem: false,\n      });\n    }\n  };\n\n  render() {\n    const { todo: { completed, id, title }, ...props } = this.props;\n    const { isEditableItem } = this.state;\n\n    const classes = classNames({\n      editing: isEditableItem,\n      completed,\n    });\n\n    return (\n      <li className={classes}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            onClick={() => { props.togleCompleteTodo(id); }}\n            className=\"toggle\"\n            checked={completed}\n          />\n          <label\n            onDoubleClick={this.handleDbClick}\n          >\n            {title}\n          </label>\n          <button\n            onClick={() => props.deleteTodo(id)}\n            type=\"button\"\n            className=\"destroy\"\n          />\n        </div>\n        <input\n          className=\"edit\"\n          onChange={this.handleInput}\n          value={this.state.inputValue}\n          onKeyPress={this.handlePressEnter}\n          onBlur={this.handleBlur}\n          ref={(input) => { this.TitleField = input; }}\n        />\n      </li>\n    );\n  }\n}\n\nconst mapActions = {\n  deleteTodo,\n  togleCompleteTodo,\n  changeTodoTitle,\n};\n\nexport default connect(null, mapActions)(TodoItem);\n\nTodoItem.propTypes = todoItemPropTypes;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { todoListProps } from '../propTypes/propTypes';\n\nimport TodoItem from './TodoItem';\n\nimport { getFilteredTodos, getCompletedLength } from '../redux/store';\nimport { togleAllComplete } from '../redux/todos';\n\nfunction Todos({\n  todos, completedLength, todosLength, ...props\n}) {\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        onChange={props.togleAllComplete}\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={completedLength === todosLength}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {\n          todos.map(todo => <TodoItem key={todo.id} todo={todo} />)\n        }\n      </ul>\n    </section>\n  );\n}\n\nconst mapState = (state, ownProps) => ({\n  todos: getFilteredTodos({ ...state, filter: ownProps.filter }),\n  completedLength: getCompletedLength(state),\n  todosLength: state.todos.length,\n});\n\nconst mapActions = {\n  togleAllComplete,\n};\n\nexport default connect(mapState, mapActions)(Todos);\n\nTodos.propTypes = todoListProps;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addTodo } from '../redux/todos';\nimport { headerPropTypes } from '../propTypes/propTypes';\n\nclass Header extends React.Component {\n  state = {\n    inputValue: '',\n  };\n\n  handleInput = (e) => {\n    const { value } = e.target;\n\n    this.setState({\n      inputValue: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    const inputValue = this.state.inputValue.trim();\n\n    if (e.key === 'Enter' && inputValue) {\n      this.props.addTodo(inputValue);\n      this.setState({\n        inputValue: '',\n      });\n    }\n  };\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <input\n          onKeyDown={this.handleSubmit}\n          onChange={this.handleInput}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={this.state.inputValue}\n        />\n      </header>\n    );\n  }\n}\n\nconst mapActions = {\n  addTodo,\n};\n\nexport default connect(null, mapActions)(Header);\n\nHeader.propTypes = headerPropTypes;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { footerPropTypes } from '../propTypes/propTypes';\n\nimport { getCompletedLength } from '../redux/store';\nimport { deleteAllCompleted } from '../redux/todos';\n\nconst Footer = ({ todosLength, completedLength, ...props }) => {\n  const clearBtnClasses = classNames({\n    'clear-completed': true,\n    'clear-completed--disable': completedLength === 0,\n  });\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        { `${todosLength - completedLength} items left` }\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <NavLink\n            exact=\"/\"\n            to=\"/\"\n            activeClassName=\"selected\"\n          >\n            All\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink\n            to=\"/active\"\n            activeClassName=\"selected\"\n          >\n            Active\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink\n            to=\"/completed\"\n            activeClassName=\"selected\"\n          >\n            Completed\n          </NavLink>\n        </li>\n      </ul>\n\n      <button\n        onClick={props.deleteAllCompleted}\n        type=\"button\"\n        className={clearBtnClasses}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nconst mapState = state => ({\n  todosLength: state.todos.length,\n  completedLength: getCompletedLength(state),\n});\n\nconst mapActions = {\n  deleteAllCompleted,\n};\n\nexport default connect(mapState, mapActions)(Footer);\n\nFooter.propTypes = footerPropTypes;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport TodoList from './Todos';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { appPropTypes } from '../propTypes/propTypes';\n\nfunction App({ todosLength, match: { params } }) {\n  return (\n    <section className=\"todoapp\">\n\n      <Header />\n      {\n        todosLength > 0 && (\n        <>\n          <TodoList filter={params.filter} />\n          <Footer />\n        </>\n        )\n      }\n\n    </section>\n  );\n}\n\nconst mapState = ({ todos }) => ({\n  todosLength: todos.length,\n});\n\nexport default connect(mapState)(App);\n\nApp.propTypes = appPropTypes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport store from './redux/store';\n\nimport './base.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/react_todo-app\">\n      <Route path=\"/:filter?\" component={App} />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}