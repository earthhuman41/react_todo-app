{"version":3,"sources":["TodoItem/TodoItem.js","TodoList/TodoList.js","Header/Header.js","Footer/Footer.js","App/App.js","index.js"],"names":["TodoItem","props","todo","deleteTodo","completeTodo","completedClass","completed","react_default","a","createElement","className","onChange","id","type","concat","checked","htmlFor","title","onClick","TodoList","todosList","togleAllComplete","togleCheckbox","completedLength","map","TodoItem_TodoItem","key","Header","_ref","addTodo","inputValue","changeInput","onKeyDown","placeholder","value","Footer","page","this","filteredField","_this$props","deleteAllCompleted","changeFilter","todosLeft","clearBtnClassName","e","href","selectedPage","React","Component","App","state","_callee","filterValue","regenerator_default","wrap","_context","prev","next","console","log","target","match","_this","setState","stop","filterTodos","status","filter","prevState","Object","toConsumableArray","index","findIndex","togle","_this$state","length","elemIndex","splice","createTodo","trim","todoItem","list","push","addId","callback","window","location","JSON","parse","localStorage","getItem","objectSpread","nextProps","nextState","nextContext","setItem","stringify","_this$state2","filteredTodosList","Header_Header","Fragment","TodoList_TodoList","src_Footer_Footer","ReactDOM","render","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.8ea21970.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodoItem(props) {\n  const {\n    todo,\n    deleteTodo,\n    completeTodo,\n  } = props;\n  const completedClass = todo.completed ? 'completed' : '';\n\n  return (\n    <li className={completedClass}>\n      <div className=\"view\">\n        <input\n          onChange={() => completeTodo(todo.id)}\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={`todo-${todo.id}`}\n          checked={todo.completed}\n        />\n        <label htmlFor={`todo-${todo.id}`}>\n          {todo.title}\n        </label>\n        <button\n          onClick={() => deleteTodo(todo.id)}\n          type=\"button\"\n          className=\"destroy\"\n        />\n      </div>\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n    title: PropTypes.string,\n  })).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  completeTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\n\nimport TodoItem from '../TodoItem/TodoItem';\nimport PropTypes from 'prop-types';\n\nfunction TodoList(props) {\n  const {\n    todosList,\n    deleteTodo,\n    togleAllComplete,\n    completeTodo,\n    completedLength,\n  } = props;\n\n  const togleCheckbox = completedLength > 0;\n\n  return (\n\n    <section className=\"main\">\n      <input\n        onChange={togleAllComplete}\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={togleCheckbox}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {\n          todosList.map(todo => (\n            <TodoItem\n              key={todo.id}\n              completeTodo={completeTodo}\n              deleteTodo={deleteTodo}\n              todo={todo}\n            />))\n        }\n      </ul>\n    </section>\n  );\n}\n\nTodoList.propTypes = {\n  todosList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  togleAllComplete: PropTypes.func.isRequired,\n  completeTodo: PropTypes.func.isRequired,\n  completedLength: PropTypes.number.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Header({ addTodo, inputValue, changeInput }) {\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <input\n        onKeyDown={addTodo}\n        onChange={changeInput}\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={inputValue}\n      />\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n  inputValue: PropTypes.string.isRequired,\n  changeInput: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Footer extends React.Component {\n  selectedPage(page) {\n    const { filteredField } = this.props;\n    return page === filteredField ? 'selected' : '';\n  }\n\n  render() {\n    const {\n      deleteAllCompleted,\n      changeFilter,\n      todosLeft,\n      completedLength,\n    } = this.props;\n\n    const clearBtnClassName = completedLength ? '' : 'clear-completed--disable';\n\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {todosLeft} items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a\n              onClick={e => changeFilter(e)}\n              href=\"#/\"\n              className={this.selectedPage('')}\n            >\n              All\n            </a>\n          </li>\n\n          <li>\n            <a\n              onClick={e => changeFilter(e)}\n              href=\"#/active\"\n              className={this.selectedPage('active')}\n            >\n              Active\n            </a>\n          </li>\n\n          <li>\n            <a\n              onClick={changeFilter}\n              href=\"#/completed\"\n              className={this.selectedPage('completed')}\n            >\n              Completed\n            </a>\n          </li>\n        </ul>\n\n        <button\n          onClick={deleteAllCompleted}\n          type=\"button\"\n          className={`clear-completed ${clearBtnClassName}`}\n        >\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  deleteAllCompleted: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n  todosLeft: PropTypes.number.isRequired,\n  completedLength: PropTypes.number.isRequired,\n  filteredField: PropTypes.string.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport TodoList from '../TodoList/TodoList';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\n\nclass App extends React.Component {\n  state = {\n    todosList: [],\n    filteredField: '',\n    inputValue: '',\n    completedLength: 0,\n  };\n\n  componentWillMount() {\n    console.log(window.location.href);\n    const state = JSON.parse(localStorage.getItem('state'));\n    console.log(JSON.parse(localStorage.getItem('state')));\n    this.setState({ ...state });\n  }\n\n  componentWillUpdate(nextProps, nextState, nextContext) {\n    localStorage.setItem('state', JSON.stringify(nextState));\n  }\n\n  changeFilter = async(e) => {\n    console.log(e.target);\n    let filterValue = e.target.href.match(/#\\/([a-z]+)/);\n\n    if (filterValue) {\n      filterValue = filterValue[1];\n    } else {\n      filterValue = '';\n    }\n\n    this.setState({ filteredField: filterValue });\n  };\n\n  filterTodos = (todosList) => {\n    const { filteredField } = this.state;\n    let status;\n\n    switch (filteredField) {\n      case 'completed':\n        status = true;\n        break;\n      case 'active':\n        status = false;\n        break;\n      default: return todosList;\n    }\n\n    return todosList.filter(todo => todo.completed === status);\n  };\n\n  completeTodo = (id) => {\n    this.setState((prevState) => {\n      const todosList = [...prevState.todosList];\n      const index = todosList.findIndex(todo => todo.id === id);\n      const togle = !todosList[index].completed;\n\n      todosList[index].completed = togle;\n      let completedLength;\n\n      if (togle) {\n        completedLength = prevState.completedLength + 1;\n      } else {\n        completedLength = prevState.completedLength - 1;\n      }\n\n      return { todosList, completedLength };\n    });\n  };\n\n  togleAllComplete = () => {\n    let { completedLength, todosList } = this.state;\n    const togle = completedLength !== todosList.length;\n\n    this.setState((prevState) => {\n      todosList = prevState.todosList.map((todo) => {\n        const { id, title } = todo;\n        return {\n          id,\n          title,\n          completed: togle,\n        };\n      });\n\n      completedLength = togle ? prevState.todosList.length : 0;\n      return { todosList, completedLength };\n    });\n  };\n\n  deleteAllCompleted = () => {\n    this.setState((prevState) => {\n      let todosList = [...prevState.todosList];\n\n      todosList = todosList.filter(todo => !todo.completed);\n      return { todosList, completedLength: 0 };\n    });\n  };\n\n  deleteTodo = (id) => {\n    this.setState((prevState) => {\n      const todosList = [...prevState.todosList];\n\n      const elemIndex = todosList.findIndex(todo => todo.id === id);\n      const completedLength = prevState.completedLength - 1;\n      todosList.splice(elemIndex, 1);\n\n      return { todosList, completedLength };\n    });\n  };\n\n  changeInput = (e) => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  createTodo = (e, id) => {\n    const title = this.state.inputValue.trim();\n    if (e.key === 'Enter' && title) {\n      const todoItem = {\n        id,\n        title,\n        completed: false,\n      };\n\n      this.setState((prevState) => {\n        const list = [...prevState.todosList];\n        list.push(todoItem);\n        return { todosList: list, inputValue: '' };\n      });\n    }\n  };\n\n  addId = (callback) => {\n    let id = 1;\n    return (e) => {\n      id += 1;\n      callback(e, id);\n    };\n  };\n\n  render() {\n    const {\n      todosList,\n      inputValue,\n      completedLength,\n      filteredField,\n    } = this.state;\n\n    const filteredTodosList = this.filterTodos(todosList);\n    const todosLeft = todosList.length - completedLength;\n    const addTodo = this.addId(this.createTodo);\n\n    return (\n      <section className=\"todoapp\">\n\n        <Header\n          inputValue={inputValue}\n          changeInput={this.changeInput}\n          addTodo={addTodo}\n        />\n        {\n          todosList.length > 0 && (\n            <>\n              <TodoList\n                completedLength={completedLength}\n                completeTodo={this.completeTodo}\n                togleAllComplete={this.togleAllComplete}\n                deleteTodo={this.deleteTodo}\n                todosList={filteredTodosList}\n              />\n              <Footer\n                filteredField={filteredField}\n                todosLeft={todosLeft}\n                completedLength={completedLength}\n                changeFilter={this.changeFilter}\n                deleteAllCompleted={this.deleteAllCompleted}\n              />\n            </>\n          )\n        }\n\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}