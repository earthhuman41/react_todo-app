{"version":3,"sources":["redux/todos.js","redux/store.js","localStorageHelper.js","propTypes/propTypes.js","components/TodoItem/TodoItem.js","components/TodoList/Todos.js","components/Header/Header.js","components/Footer/Footer.js","components/App/App.js","index.js"],"names":["todosReducer","state","arguments","length","undefined","action","type","todos","Object","toConsumableArray","newTodo","id","v4","title","completed","concat","newTodos","forEach","todo","push","map","objectSpread","completedCount","countCompletedTodos","filter","console","log","initState","JSON","parse","localStorage","getItem","store","createStore","subscribe","stateToSave","getState","setItem","stringify","getTodos","getFilteredTodos","createSelector","filterTodos","getCompletedLength","PropTypes","array","isRequired","objectOf","shape","params","string","func","object","number","boolean","TodoItem","isEditableItem","inputValue","handleDbClick","_this","setState","prevState","props","handleInput","event","value","target","handlePressEnter","key","handleSubmit","handleBlur","_this$props","objectWithoutProperties","trim","changeTodoTitle","this","TitleField","focus","_this2","_this$props2","_this$props2$todo","classes","classNames","editing","react_default","a","createElement","className","onClick","togleCompleteTodo","checked","onDoubleClick","deleteTodo","onChange","onKeyPress","onBlur","ref","input","React","Component","mapActions","connect","togleAllComplete","ownProps","completedLength","todosLength","_ref","htmlFor","components_TodoItem_TodoItem","Header","e","addTodo","onKeyDown","placeholder","deleteAllCompleted","clearBtnClasses","clear-completed","clear-completed--disable","react_router_dom","exact","to","activeClassName","_ref2","match","components_Header_Header","Fragment","TodoList_Todos","components_Footer_Footer","ReactDOM","render","es","basename","react_router","path","component","App","document","getElementById"],"mappings":"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","file":"static/js/main.58085aec.chunk.js","sourcesContent":["import { v4 } from 'node-uuid';\n\nconst ADD_TODO = 'ADD_TODO';\nconst DELETE_TODO = 'DELETE_TODO';\nconst CHANGE_TODO_TITLE = 'CHANGE_TODO_TITLE';\nconst TOGLE_COMPLETE_TODO = 'COMPLETE_TODO';\nconst TOGLE_ALL_COMPLETE = 'TOGLE_TODOS';\nconst DELETE_ALL_COMPLETED = 'DELETE_ALL_COMPLETED';\n\nexport const addTodo = title => ({\n  type: ADD_TODO,\n  title,\n});\n\nexport const deleteTodo = id => ({\n  type: DELETE_TODO,\n  id,\n});\n\nexport const togleCompleteTodo = id => ({\n  type: TOGLE_COMPLETE_TODO,\n  id,\n});\n\nexport const togleAllComplete = () => ({\n  type: TOGLE_ALL_COMPLETE,\n});\n\nexport const deleteAllCompleted = () => ({\n  type: DELETE_ALL_COMPLETED,\n});\n\nexport const changeTodoTitle = (id, title) => ({\n  type: CHANGE_TODO_TITLE,\n  id,\n  title,\n});\n\nconst todosReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_TODO: {\n      const todos = [...state];\n\n      const newTodo = {\n        id: v4(),\n        title: action.title,\n        completed: false,\n      };\n\n      return [...todos, newTodo];\n    }\n\n    case DELETE_TODO: {\n      const todos = [...state];\n      const newTodos = [];\n\n      todos.forEach((todo) => {\n        if (todo.id !== action.id) {\n          newTodos.push(todo);\n        }\n      });\n\n      return newTodos;\n    }\n\n    case TOGLE_COMPLETE_TODO: {\n      let todos = [...state];\n\n      todos = todos.map((todo) => {\n        if (todo.id === action.id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n        return todo;\n      });\n\n      return todos;\n    }\n\n    case TOGLE_ALL_COMPLETE: {\n      let todos = [...state];\n      const completedCount = countCompletedTodos(todos);\n\n      todos = todos.map(todo => ({\n        ...todo,\n        completed: completedCount !== todos.length,\n      }));\n\n      return todos;\n    }\n\n    case DELETE_ALL_COMPLETED: {\n      let todos = [...state];\n\n      todos = todos.filter(todo => !todo.completed);\n\n      return todos;\n    }\n\n    case CHANGE_TODO_TITLE: {\n      let todos = [...state];\n      const { id, title } = action;\n      console.log(title);\n      todos = todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            title,\n          };\n        }\n\n        return todo;\n      });\n\n      return todos;\n    }\n\n    default: return state;\n  }\n};\n\nexport default todosReducer;\n\n// Cелекторы\nexport const countCompletedTodos = (state = []) => {\n  const completedTodos = state.filter(todo => todo.completed);\n  return completedTodos.length;\n};\n\nexport const filterTodos = (state, filter) => {\n  return state.filter((todo) => {\n    switch (filter) {\n      case 'active':\n        return !todo.completed;\n\n      case 'completed':\n        return todo.completed;\n\n      default: return todo;\n    }\n  });\n};\n","import { createStore } from 'redux';\nimport { createSelector } from 'reselect';\nimport todosReducer, { countCompletedTodos, filterTodos } from './todos';\nimport { saveState, loadState } from '../localStorageHelper';\n// Загрузка из LocaleStorage\nconst initState = loadState();\n\nconst reducer = (state = initState, action) => ({\n  todos: todosReducer(state.todos, action),\n});\n\nconst store = createStore(reducer);\n\n// Сохранение в LocaleStorage\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport default store;\n\n// Селекторы\nexport const getTodos = state => state.todos;\nexport const getFilter = state => state.filter;\n\nexport const getFilteredTodos = createSelector(\n  [getTodos, getFilter],\n  (todos, filter) => filterTodos(todos, filter)\n);\n\nexport const getCompletedLength = createSelector(\n  [getTodos],\n  todos => countCompletedTodos(todos)\n);\n","export const saveState = (stateToSave) => {\n  localStorage.setItem('state', JSON.stringify(stateToSave));\n};\n\nexport const loadState = () => {\n  console.log(JSON.parse(localStorage.getItem('state')));\n  return JSON.parse(localStorage.getItem('state'));\n};\n","import PropTypes from 'prop-types';\n\nexport const appPropTypes = {\n  todos: PropTypes.array.isRequired,\n  match: PropTypes.objectOf(PropTypes.shape({\n    params: PropTypes.objectOf(PropTypes.shape({\n      filter: PropTypes.string,\n    })),\n  })).isRequired,\n};\n\nexport const headerPropTypes = {\n  addTodo: PropTypes.func,\n};\n\nexport const todoListProps = {\n  todos: PropTypes.object.isRequired,\n  completedLength: PropTypes.number.isRequired,\n  todosLength: PropTypes.number.isRequired,\n  togleAllComplete: PropTypes.func.isRequired,\n};\n\nexport const todoItemPropTypes = {\n  todo: PropTypes.objectOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    completed: PropTypes.boolean,\n  })).isRequired,\n  togleCompleteTodo: PropTypes.func,\n  deleteTodo: PropTypes.func,\n  changeTodoTitle: PropTypes.func,\n};\n\nexport const footerPropTypes = {\n  todosLength: PropTypes.number,\n  completedLength: PropTypes.number,\n  deleteAllCompleted: PropTypes.func,\n\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { connect } from 'react-redux';\n\nimport {\n  deleteTodo, togleCompleteTodo, changeTodoTitle,\n} from '../../redux/todos';\nimport { todoItemPropTypes } from '../../propTypes/propTypes';\n\nclass TodoItem extends React.Component {\n  state = {\n    isEditableItem: false,\n    inputValue: '',\n  };\n\n  componentDidUpdate() {\n    this.TitleField.focus();\n  }\n\n  handleDbClick = () => {\n    this.setState(prevState => ({\n      inputValue: this.props.todo.title,\n      isEditableItem: !prevState.isEditableItem,\n    }));\n  };\n\n  handleInput = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      inputValue: value,\n    });\n  };\n\n  handlePressEnter = (event) => {\n    if (event.key === 'Enter') {\n      this.handleSubmit();\n    }\n  };\n\n  handleBlur = () => {\n    if (this.state.isEditableItem !== false) {\n      this.handleSubmit();\n    }\n  };\n\n  handleSubmit = () => {\n    const { todo: { id }, ...props } = this.props;\n    const inputValue = this.state.inputValue.trim();\n\n    if (inputValue) {\n      props.changeTodoTitle(id, inputValue);\n\n      this.setState({\n        isEditableItem: false,\n      });\n    }\n  };\n\n  render() {\n    const { todo: { completed, id, title }, ...props } = this.props;\n    const { isEditableItem } = this.state;\n\n    const classes = classNames({\n      editing: isEditableItem,\n      completed,\n    });\n\n    return (\n      <li className={classes}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            onClick={() => { props.togleCompleteTodo(id); }}\n            className=\"toggle\"\n            checked={completed}\n          />\n          <label\n            onDoubleClick={this.handleDbClick}\n          >\n            {title}\n          </label>\n          <button\n            onClick={() => props.deleteTodo(id)}\n            type=\"button\"\n            className=\"destroy\"\n          />\n        </div>\n        <input\n          className=\"edit\"\n          onChange={this.handleInput}\n          value={this.state.inputValue}\n          onKeyPress={this.handlePressEnter}\n          onBlur={this.handleBlur}\n          ref={(input) => { this.TitleField = input; }}\n        />\n      </li>\n    );\n  }\n}\n\nconst mapActions = {\n  deleteTodo,\n  togleCompleteTodo,\n  changeTodoTitle,\n};\n\nexport default connect(null, mapActions)(TodoItem);\n\nTodoItem.propTypes = todoItemPropTypes;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { todoListProps } from '../../propTypes/propTypes';\n\nimport TodoItem from '../TodoItem/TodoItem';\n\nimport { getFilteredTodos, getCompletedLength } from '../../redux/store';\nimport { togleAllComplete } from '../../redux/todos';\n\nfunction Todos({\n  todos, completedLength, todosLength, ...props\n}) {\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        onChange={props.togleAllComplete}\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={completedLength === todosLength}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {\n          todos.map(todo => <TodoItem key={todo.id} todo={todo} />)\n        }\n      </ul>\n    </section>\n  );\n}\n\nconst mapState = (state, ownProps) => ({\n  todos: getFilteredTodos({ ...state, filter: ownProps.filter }),\n  completedLength: getCompletedLength(state),\n  todosLength: state.todos.length,\n});\n\nconst mapActions = {\n  togleAllComplete,\n};\n\nexport default connect(mapState, mapActions)(Todos);\n\nTodos.propTypes = todoListProps;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addTodo } from '../../redux/todos';\nimport { headerPropTypes } from '../../propTypes/propTypes';\n\nclass Header extends React.Component {\n  state = {\n    inputValue: '',\n  };\n\n  handleInput = (e) => {\n    const { value } = e.target;\n\n    this.setState({\n      inputValue: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    const inputValue = this.state.inputValue.trim();\n\n    if (e.key === 'Enter' && inputValue) {\n      this.props.addTodo(inputValue);\n      this.setState({\n        inputValue: '',\n      });\n    }\n  };\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <input\n          onKeyDown={this.handleSubmit}\n          onChange={this.handleInput}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={this.state.inputValue}\n        />\n      </header>\n    );\n  }\n}\n\nconst mapActions = {\n  addTodo,\n};\n\nexport default connect(null, mapActions)(Header);\n\nHeader.propTypes = headerPropTypes;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink, HashRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { footerPropTypes } from '../../propTypes/propTypes';\n\nimport { getCompletedLength } from '../../redux/store';\nimport { deleteAllCompleted } from '../../redux/todos';\n\nconst Footer = ({ todosLength, completedLength, ...props }) => {\n  const clearBtnClasses = classNames({\n    'clear-completed': true,\n    'clear-completed--disable': completedLength === 0,\n  });\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        { `${todosLength - completedLength} items left` }\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <NavLink\n            exact=\"/\"\n            to=\"/\"\n            activeClassName=\"selected\"\n          >\n            All\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink\n            to=\"/active\"\n            activeClassName=\"selected\"\n          >\n            Active\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink\n            to=\"/completed\"\n            activeClassName=\"selected\"\n          >\n            Completed\n          </NavLink>\n        </li>\n      </ul>\n\n      <button\n        onClick={props.deleteAllCompleted}\n        type=\"button\"\n        className={clearBtnClasses}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nconst mapState = state => ({\n  todosLength: state.todos.length,\n  completedLength: getCompletedLength(state),\n});\n\nconst mapActions = {\n  deleteAllCompleted,\n};\n\nexport default connect(mapState, mapActions)(Footer);\n\nFooter.propTypes = footerPropTypes;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport TodoList from '../TodoList/Todos';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport { appPropTypes } from '../../propTypes/propTypes';\n\nfunction App({ todosLength, match: { params } }) {\n  return (\n    <section className=\"todoapp\">\n\n      <Header />\n      {\n        todosLength > 0 && (\n        <>\n          <TodoList filter={params.filter} />\n          <Footer />\n        </>\n        )\n      }\n\n    </section>\n  );\n}\n\nconst mapState = ({ todos }) => ({\n  todosLength: todos.length,\n});\n\nexport default connect(mapState)(App);\n\nApp.propTypes = appPropTypes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport store from './redux/store';\n\nimport './base.css';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/react_todo-app\">\n      <Route path=\"/:filter?\" component={App} />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}